<?php

class Product // создали класс для различного вида продукции
{

    /* Опишем общие свойства которые могут быть у всей продукции */
    public $name;
    protected $price;

//    что бы случайно не изменить важное свойство его лучше назначать приватным
    /**
     * Доступ к таким свойствам получаем через Геттеры и Сеттеры
     * далее закрытое свойство можно передать в конструктор нужного класса посредством публичного метода
     */
    private $discount = 0;  // добавляем свойство для процентальной скидки на товар

    /** Модификаторы доступа: */
//    доступен в классе где объявлен, доступен вне класса и во всех классах наследниках
    public $public = 'PUBLIC';

//    доступен в классе где объявлен и во всех классах наследниках. Вне класса не доступен
    protected $protected = 'PROTECTED';

//    Доступен ТОЛЬКО в классе где был объявлен.
    private $private = 'PRIVATE';

    /* специфичные свойства которые могут быть не у всех. перекинули свойства в соотв классы */
    /*public $cpu;
    public $numPages;*/

    /* опишем конструктор со всеми общими свойствами товаров.*/
    public function __construct($name, $price)
    {
        $this->name = $name;
        $this->price = $price;

//        Внутри класса где объявленны будут видны все свойства
        /*var_dump($this->public);
        var_dump($this->protected);
        var_dump($this->private);*/

        /*$this->cpu = $cpu;
        $this->numPages = $numPages;*/ // перекинули свойства в соотв классы
    }


    /* Пишем метод для получения информации о товаре:
       По умолчанию будет выводить значения свойств для 'notebook' */
    public function getProduct()
    {
        /* просто возвращаем неименованую строку, которую в дальнейшем дополним
        к переменной $out в дочерних классах */
        return "<hr><b>О товаре:</b><br>
                Наименование: {$this->name};<br>
                <!--меняем цену с учётом скидки на товар:-->
                Цена со скидкой: {$this->getPrice()};<br>";



    }

    /**
     * Данные методы называют ГЕТТЕРЫ. IDE генерирует их автоматически. Наводим курсор на
     * свойство, жмем Alt+Enter и указываем 'add getter'
     */
    public function getPrice()
    {
        return $this->price - ($this->discount / 100 * $this->price);
    }

    public function getName()
    {
        return $this->name;
    }

    /**
     * плючами использования данных методов является контроль за возвращаемыми типами значений:
     * @return int
     */
    public function getDiscount(): int /*жестко назначается тип значения*/
    {
        return $this->discount;
    }

    /**
     * теперь можно использовать это публичное свойство в любом классе и задавать ему нужные значения
     * @param int $discount
     */
    public function setDiscount(int $discount): void
    {
        $this->discount = $discount;
    }


}